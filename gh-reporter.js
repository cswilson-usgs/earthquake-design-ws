'use strict';

var mocha = require('mocha'),
    util = require('util');

var GHReporter = function (runner) {
  mocha.reporters.Base.call(this, runner);

  var self = this;
  var indents = 0;
  // var n = 0;


  function header () {
    return Array(indents+1).join('#');
  }

  function pending () {
    return ':zzz:';
  }

  function pass () {
    return ':green_heart:';
  }

  function fail () {
    return ':broken_heart:';
  }

  function write () {
    var message;

    message = util.format.apply(null, arguments);
    process.stdout.write(message + '\n');
  }

  runner.on('start', function () {
    write(`

# Quality Control Tests
> Generated: ${runner.stats.start.toUTCString()}

Results shown below were generated by running the quality control test
suite included in this package. Most simply:
\`\`\`
./update-quality-control.sh
\`\`\`
### Legend
- :green_heart: Test passing
- :broken_heart: Test failing
- :zzz: Test skipped

    `);
  });

  runner.on('suite', function (suite) {
    ++indents;
    write('\r\n' + header(), suite.title);
  });

  runner.on('suite end', function () {
    --indents;
    if (indents === 1) {
      write();
    }
  });

  runner.on('pending', function (test) {
    write('    - ' + pending() + ' %s', test.title);
  });

  runner.on('pass', function (test) {
    if (test.speed === 'fast') {
      write('    - ' + pass() + ' %s', test.title);
    } else {
      write('    - ' + pass() + ' %s\n    - :snail: (%dms)',
          test.title, test.duration);
    }
  });

  runner.on('fail', function (test) {
    write('    - ' +  fail() + ' %s', test.title);
  });

  runner.on('end', () => {
    var stats = self.stats;

    write('\n___\n## Summary of Results');
    write(`> Tests completed in ${stats.duration} ms`);

    write(`- ${pass()} ${stats.passes} passing`);

    if (stats.failures) {
      write(`- ${fail()} ${stats.failures} failing`);
    }
  });
};


module.exports = GHReporter;
